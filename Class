// npm install discord.js dayjs
const { Client, GatewayIntentBits, EmbedBuilder } = require('discord.js');
const dayjs = require('dayjs');
require('dayjs/locale/th');
dayjs.locale('th');

// ตารางเรียน (ตรงตามภาพ)
const timetable = {
  'จันทร์': [
    { start: '07:30', end: '08:20', subject: 'Home Room', code: '-', teacher: 'ครูจุฬาลักษณ์' },
    { start: '08:20', end: '09:10', subject: 'คณิตศาสตร์', code: '745', teacher: 'ครูจุฬาลักษณ์' },
    { start: '09:10', end: '10:00', subject: 'คณิตศาสตร์', code: '745', teacher: 'ครูจุฬาลักษณ์' },
    { start: '10:00', end: '10:50', subject: 'คณิตศาสตร์', code: '745', teacher: 'ครูจุฬาลักษณ์' },
    { start: '10:50', end: '11:40', subject: 'วิทยาศาสตร์', code: '745', teacher: 'ครูจุฬาลักษณ์' },
    { start: '11:40', end: '12:30', subject: 'วิทยาศาสตร์', code: '745', teacher: 'ครูจุฬาลักษณ์' },
    { start: '12:30', end: '13:20', subject: 'พักกลางวัน', code: '-', teacher: '-' },
    { start: '13:20', end: '14:10', subject: 'ส40247', code: 'ส40247', teacher: 'ครูจุฬาลักษณ์' },
    { start: '14:10', end: '15:00', subject: 'พลศึกษา', code: '745', teacher: 'ครูจุฬาลักษณ์' },
    { start: '15:00', end: '15:50', subject: 'แนะแนว', code: '745', teacher: 'ครูจุฬาลักษณ์' },
    { start: '15:50', end: '16:40', subject: 'กิจกรรม', code: '745', teacher: 'ครูจุฬาลักษณ์' },
  ],
  'อังคาร': [
    { start: '07:30', end: '08:20', subject: 'Home Room', code: '-', teacher: 'ครูจุฬาลักษณ์' },
    { start: '08:20', end: '09:10', subject: 'ภาษาไทย', code: '030246', teacher: 'ครูณปภัช' },
    { start: '09:10', end: '10:00', subject: 'ภาษาไทย', code: '030246', teacher: 'ครูณปภัช' },
    { start: '10:00', end: '10:50', subject: 'คณิตศาสตร์', code: '745', teacher: 'ครูจุฬาลักษณ์' },
    { start: '10:50', end: '11:40', subject: 'คณิตศาสตร์', code: '745', teacher: 'ครูจุฬาลักษณ์' },
    { start: '11:40', end: '12:30', subject: 'วิทยาศาสตร์', code: '745', teacher: 'ครูจุฬาลักษณ์' },
    { start: '12:30', end: '13:20', subject: 'พักกลางวัน', code: '-', teacher: '-' },
    { start: '13:20', end: '14:10', subject: 'สังคมศึกษา', code: 'ส40247', teacher: 'ครูจุฬาลักษณ์' },
    { start: '14:10', end: '15:00', subject: 'สุขศึกษา', code: '745', teacher: 'ครูจุฬาลักษณ์' },
    { start: '15:00', end: '15:50', subject: 'ลูกเสือ', code: '745', teacher: 'ครูจุฬาลักษณ์' },
    { start: '15:50', end: '16:40', subject: 'ลูกเสือ', code: '745', teacher: 'ครูจุฬาลักษณ์' },
  ],
  'พุธ': [
    { start: '07:30', end: '08:20', subject: 'Home Room', code: '-', teacher: 'ครูจุฬาลักษณ์' },
    { start: '08:20', end: '09:10', subject: 'คอมพิวเตอร์', code: '41105', teacher: 'ครูจุฬาลักษณ์' },
    { start: '09:10', end: '10:00', subject: 'ภาษาไทย', code: '030246', teacher: 'ครูณปภัช' },
    { start: '10:00', end: '10:50', subject: 'ภาษาอังกฤษ', code: '745', teacher: 'ครูจุฬาลักษณ์' },
    { start: '10:50', end: '11:40', subject: 'ภาษาอังกฤษ', code: '745', teacher: 'ครูจุฬาลักษณ์' },
    { start: '11:40', end: '12:30', subject: 'วิทยาศาสตร์', code: '745', teacher: 'ครูจุฬาลักษณ์' },
    { start: '12:30', end: '13:20', subject: 'พักกลางวัน', code: '-', teacher: '-' },
    { start: '13:20', end: '14:10', subject: 'สังคมศึกษา', code: 'ส40247', teacher: 'ครูจุฬาลักษณ์' },
    { start: '14:10', end: '15:00', subject: 'ศิลปะ', code: '20201', teacher: 'ครูจุฬาลักษณ์' },
    { start: '15:00', end: '15:50', subject: 'แนะแนว', code: '745', teacher: 'ครูจุฬาลักษณ์' },
    { start: '15:50', end: '16:40', subject: 'กิจกรรม', code: '745', teacher: 'ครูจุฬาลักษณ์' },
  ],
  'พฤหัสบดี': [
    { start: '07:30', end: '08:20', subject: 'Home Room', code: '-', teacher: 'ครูจุฬาลักษณ์' },
    { start: '08:20', end: '09:10', subject: 'ภาษาอังกฤษ', code: '745', teacher: 'ครูจุฬาลักษณ์' },
    { start: '09:10', end: '10:00', subject: 'ภาษาอังกฤษ', code: '745', teacher: 'ครูจุฬาลักษณ์' },
    { start: '10:00', end: '10:50', subject: 'วิทยาศาสตร์', code: '745', teacher: 'ครูจุฬาลักษณ์' },
    { start: '10:50', end: '11:40', subject: 'วิทยาศาสตร์', code: '745', teacher: 'ครูจุฬาลักษณ์' },
    { start: '11:40', end: '12:30', subject: 'ภาษาไทย', code: '030246', teacher: 'ครูณปภัช' },
    { start: '12:30', end: '13:20', subject: 'พักกลางวัน', code: '-', teacher: '-' },
    { start: '13:20', end: '14:10', subject: 'ศิลปะ', code: '20201', teacher: 'ครูจุฬาลักษณ์' },
    { start: '14:10', end: '15:00', subject: 'ศิลปะ', code: '20201', teacher: 'ครูจุฬาลักษณ์' },
    { start: '15:00', end: '15:50', subject: 'กิจกรรม', code: '745', teacher: 'ครูจุฬาลักษณ์' },
    { start: '15:50', end: '16:40', subject: 'กิจกรรม', code: '745', teacher: 'ครูจุฬาลักษณ์' },
  ],
  'ศุกร์': [
    { start: '07:30', end: '08:20', subject: 'Home Room', code: '-', teacher: 'ครูจุฬาลักษณ์' },
    { start: '08:20', end: '09:10', subject: 'สุขศึกษา', code: '745', teacher: 'ครูจุฬาลักษณ์' },
    { start: '09:10', end: '10:00', subject: 'สุขศึกษา', code: '745', teacher: 'ครูจุฬาลักษณ์' },
    { start: '10:00', end: '10:50', subject: 'ภาษาอังกฤษ', code: '745', teacher: 'ครูจุฬาลักษณ์' },
    { start: '10:50', end: '11:40', subject: 'ภาษาอังกฤษ', code: '745', teacher: 'ครูจุฬาลักษณ์' },
    { start: '11:40', end: '12:30', subject: 'สังคมศึกษา', code: 'ส40247', teacher: 'ครูจุฬาลักษณ์' },
    { start: '12:30', end: '13:20', subject: 'พักกลางวัน', code: '-', teacher: '-' },
    { start: '13:20', end: '14:10', subject: 'แนะแนว', code: '745', teacher: 'ครูจุฬาลักษณ์' },
    { start: '14:10', end: '15:00', subject: 'แนะแนว', code: '745', teacher: 'ครูจุฬาลักษณ์' },
    { start: '15:00', end: '15:50', subject: 'กิจกรรม', code: '745', teacher: 'ครูจุฬาลักษณ์' },
    { start: '15:50', end: '16:40', subject: 'กิจกรรม', code: '745', teacher: 'ครูจุฬาลักษณ์' },
  ]
};

const daysTH = ['อาทิตย์', 'จันทร์', 'อังคาร', 'พุธ', 'พฤหัสบดี', 'ศุกร์', 'เสาร์'];

function getCurrentAndNextPeriod() {
  const now = dayjs().locale('th');
  const day = daysTH[now.day()];
  if (!timetable[day]) {
    return { current: { subject: 'ไม่มีคาบเรียน', code: '-', teacher: '-' }, next: { subject: 'ไม่มีคาบเรียน', code: '-', teacher: '-' }, day, time: now.format('HH:mm') };
  }
  const periods = timetable[day];
  let current = { subject: 'พัก', code: '-', teacher: '-' };
  let next = { subject: 'ไม่มีคาบเรียน', code: '-', teacher: '-' };
  for (let i = 0; i < periods.length; i++) {
    const { start, end } = periods[i];
    const startTime = dayjs(now.format('YYYY-MM-DD') + ' ' + start);
    const endTime = dayjs(now.format('YYYY-MM-DD') + ' ' + end);
    if (now.isAfter(startTime) && now.isBefore(endTime)) {
      current = periods[i];
      next = periods[i+1] || { subject: 'ไม่มีคาบเรียน', code: '-', teacher: '-' };
      break;
    }
    if (now.isBefore(startTime)) {
      current = { subject: 'พัก', code: '-', teacher: '-' };
      next = periods[i];
      break;
    }
  }
  // หลัง 16:40
  if (now.isAfter(dayjs(now.format('YYYY-MM-DD') + ' 16:40'))) {
    current = { subject: 'ไม่มีคาบเรียน', code: '-', teacher: '-' };
    next = { subject: 'ไม่มีคาบเรียน', code: '-', teacher: '-' };
  }
  return { current, next, day, time: now.format('HH:mm') };
}

const client = new Client({ intents: [GatewayIntentBits.Guilds, GatewayIntentBits.GuildMessages, GatewayIntentBits.MessageContent] });

let interval = null;
let lastMessage = null;

client.on('messageCreate', async message => {
  if (message.content === '!class') {
    if (interval) clearInterval(interval);
    const sendOrEdit = async () => {
      const { current, next, day, time } = getCurrentAndNextPeriod();
      const embed = new EmbedBuilder()
        .setColor(0x0099FF)
        .setTitle('📚 ตารางเรียนวันนี้')
        .setDescription(`**วัน:** ${day}\n**เวลาขณะนี้:** ${time}`)
        .addFields(
          { name: 'คาบปัจจุบัน', value: `**${current.subject}**\nรหัส: ${current.code}\nครู: ${current.teacher}`, inline: true },
          { name: 'คาบถัดไป', value: `**${next.subject}**\nรหัส: ${next.code}\nครู: ${next.teacher}`, inline: true },
        )
        .setFooter({ text: 'อัปเดตทุก 30 วินาที' })
        .setTimestamp();

      if (lastMessage) {
        await lastMessage.edit({ embeds: [embed] });
      } else {
        lastMessage = await message.reply({ embeds: [embed] });
      }
    };

    await sendOrEdit();
    interval = setInterval(sendOrEdit, 30000);
  }
});

client.on('ready', () => {
  console.log(`Logged in as ${client.user.tag}`);
});

// client.login('YOUR_BOT_TOKEN');
